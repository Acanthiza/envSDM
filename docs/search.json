[{"path":"https://acanthiza.github.io/envSDM/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Stuart Brown. Author. Nigel Willoughby. Author, maintainer. Joel Allan. Author.","code":""},{"path":"https://acanthiza.github.io/envSDM/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Brown S, Willoughby N, Allan J (2024). envSDM: Generate tuned spatially validated SDM's many taxa. R package version 0.2.0, https://acanthiza.github.io/envSDM/.","code":"@Manual{,   title = {envSDM: Generate tuned and spatially validated SDM's for many taxa},   author = {Stuart Brown and Nigel Willoughby and Joel Allan},   year = {2024},   note = {R package version 0.2.0},   url = {https://acanthiza.github.io/envSDM/}, }"},{"path":"https://acanthiza.github.io/envSDM/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Generate tuned and spatially validated SDM's for many taxa","text":"envSDM CRAN. can install development version GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"acanthiza/envSDM\")"},{"path":"https://acanthiza.github.io/envSDM/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 DEW Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://acanthiza.github.io/envSDM/reference/density_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a spatially thickened background sample — density_sample","title":"Create a spatially thickened background sample — density_sample","text":"idea terra::spatSample(weights = weight_raster), can use density raster different spatial resolution. Can much quicker terra::spatSample() large areas small resolutions.","code":""},{"path":"https://acanthiza.github.io/envSDM/reference/density_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a spatially thickened background sample — density_sample","text":"","code":"density_sample(   x,   dens_rast,   samp_df,   boundary,   mult = 2,   max_sample = 200,   verbose = FALSE )"},{"path":"https://acanthiza.github.io/envSDM/reference/density_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a spatially thickened background sample — density_sample","text":"x spatRaster. Sample cell XY values raster. dens_rast spatRaster. Density raster. equivalent weights argument terra::spatSample() resolution x. Usually made within prep_sdm() samp_df Dataframe. Usually built prep_sdm() boundary sf. Boundary within sample cells x mult Numeric. iteration try sampling mult * sum(samp_df$target) points max_sample Numeric. many iterations try meet density targets samp_df. verbose Logical. Prints many iterations attempted.","code":""},{"path":"https://acanthiza.github.io/envSDM/reference/density_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a spatially thickened background sample — density_sample","text":"Dataframe","code":""},{"path":"https://acanthiza.github.io/envSDM/reference/evaluate_sdm.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate an SDM — evaluate_sdm","title":"Evaluate an SDM — evaluate_sdm","text":"Returns various evaluation metrics predicts::pa_evaluate() flexsdm::sdm_eval().","code":""},{"path":"https://acanthiza.github.io/envSDM/reference/evaluate_sdm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate an SDM — evaluate_sdm","text":"","code":"evaluate_sdm(m, p_test, b_test, do_gc = FALSE, ...)"},{"path":"https://acanthiza.github.io/envSDM/reference/evaluate_sdm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate an SDM — evaluate_sdm","text":"m SDM result within tune_sdm() p_test Presence test data generated within tune_sdm() b_test Background test data generated within tune_sdm() do_gc Logical. Run base::rm(list = ls) base::gc() end function? Useful running SDMs many, many taxa, especially done parallel. Note, actually usees rm(list = ls(pattern = \"^[^e$]\")). ... Passed terra::predict() predicts::pa_evaluate()","code":""},{"path":"https://acanthiza.github.io/envSDM/reference/evaluate_sdm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate an SDM — evaluate_sdm","text":"paModelEvaluation (see predicts::pa_evaluate()) extra metrics flexsdm::sdm_eval(): AUC auc_po_flexsdm; BOYCE CBI; CBI_rescale (CBI -1 1, CBI_rescale 0 1); IMAE.","code":""},{"path":"https://acanthiza.github.io/envSDM/reference/evaluate_sdm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate an SDM — evaluate_sdm","text":"","code":"out_dir <- file.path(system.file(package = \"envSDM\"), \"examples\", \"acaule\")    prep <- rio::import(fs::path(out_dir, \"prep.rds\"))    presences <- prep$blocks[prep$blocks$pa == 1 & prep$blocks$block != 1, ]   background <- prep$blocks[prep$blocks$pa == 0 & prep$blocks$block != 1, ]    evaluate_ex_dir <- fs::path(out_dir, \"evaluate_example\")    tune_sdm(out_dir = out_dir            , algo = \"rf\"            , trees = 500            , mtry = FALSE            , nodesize = FALSE            , keep_model = TRUE            , save_to = evaluate_ex_dir            ) #> tuning acaule #> Warning: cannot open file 'H:/temp/nige/Rtmpq2YbeJ/temp_libpath6084516a5772/envSDM/examples/acaule/evaluate_example/tune.log': No such file or directory #> Error in file(con, \"w\"): cannot open the connection    tune <- rio::import(fs::path(evaluate_ex_dir, \"tune.rds\")                       , setclass = \"tibble\"                       ) #> Error: No such file: H:/temp/nige/Rtmpq2YbeJ/temp_libpath6084516a5772/envSDM/examples/acaule/evaluate_example/tune.rds    evaluate_sdm(tune$m[[1]]                , p_test = presences                , b_test = background                ) #> Error in eval(expr, envir, enclos): object 'tune' not found"},{"path":"https://acanthiza.github.io/envSDM/reference/make_mcp.html","id":null,"dir":"Reference","previous_headings":"","what":"Minimum convex polygon around records — make_mcp","title":"Minimum convex polygon around records — make_mcp","text":"use predict boundary taxa, also see make_predict_boundary()","code":""},{"path":"https://acanthiza.github.io/envSDM/reference/make_mcp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Minimum convex polygon around records — make_mcp","text":"","code":"make_mcp(   presence,   out_file,   force_new = FALSE,   pres_x = \"long\",   pres_y = \"lat\",   in_crs = 4326,   out_crs = in_crs,   buf = 0,   clip = NULL )"},{"path":"https://acanthiza.github.io/envSDM/reference/make_mcp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Minimum convex polygon around records — make_mcp","text":"presence Cleaned filtered dataframe presences out_file Character. Path mcp saved. saved sfarrow::st_write_parquet(). Currently work well full stop path. file types changed .parquet force_new Logical. out_file exists, recreate ? pres_x, pres_y Character. Name columns presence x y coordinates in_crs epsg code coordinates presence out_crs epsg code coordinates output mcp. Usually predictors buf Distance buffer mcp. Passed dist argument sf:st_buffer() units follow guidance. clip sf clip mcp","code":""},{"path":"https://acanthiza.github.io/envSDM/reference/make_mcp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Minimum convex polygon around records — make_mcp","text":"sf. out_file saved.","code":""},{"path":"https://acanthiza.github.io/envSDM/reference/make_mcp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Minimum convex polygon around records — make_mcp","text":"","code":"out_dir <- file.path(system.file(package = \"envSDM\"), \"examples\")  data <- file.path(system.file(package = \"predicts\"), \"ex\") |>   fs::dir_ls(regexp = \"\\\\.csv$\") |>   tibble::enframe(name = NULL, value = \"path\") |>   dplyr::mutate(taxa = gsub(\"\\\\.csv\", \"\", basename(path))                 , presence = purrr::map(path, rio::import, setclass = \"tibble\")                 , presence = purrr::map(presence                                         , \\(x) x |>                                           dplyr::filter(!is.na(lat)                                                         , !is.na(lon)                                           )                 )                 , out_dir = fs::path(out_dir, taxa)                 , out_mcp = fs::path(out_dir, \"mcp.parquet\")   )   # mcps --------  purrr::pwalk(list(data$presence                   , data$out_mcp ) , \\(x, y) make_mcp(x, y, pres_x = \"lon\") )"},{"path":"https://acanthiza.github.io/envSDM/reference/make_predict_boundary.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge polygons (or polygon files) to form a single minimum convex polygon\r\n(mcp) — make_predict_boundary","title":"Merge polygons (or polygon files) to form a single minimum convex polygon\r\n(mcp) — make_predict_boundary","text":"Primary use create predict boundary prep_sdm(), merging (existing) minimum convex polygon around points sources taxa distribution. Optionally, applying buffer around resulting mcp; clipping (usually coastal) boundary. predict boundary used generation background points masking 'full' predict (full extent environmental variables.","code":""},{"path":"https://acanthiza.github.io/envSDM/reference/make_predict_boundary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge polygons (or polygon files) to form a single minimum convex polygon\r\n(mcp) — make_predict_boundary","text":"","code":"make_predict_boundary(   poly_list,   out_file,   buffer_metres = 0,   col_name = \"taxa\",   col_name_val = basename(dirname(out_file)),   clip = NULL,   out_crs,   return_poly = FALSE,   force_new = FALSE )"},{"path":"https://acanthiza.github.io/envSDM/reference/make_predict_boundary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge polygons (or polygon files) to form a single minimum convex polygon\r\n(mcp) — make_predict_boundary","text":"poly_list List paths list sf out_file Character name file save buffer_metres Numeric. Distance metres buffer mcp col_name Name column create resulting mcp col_name_val Value provide column resulting mcp clip sf. Clip resulting mcp back . out_crs Numeric. epsg code return_poly Logical. Return mcp, alternatively invisible(NULL) force_new Logical. out_file exists, recreate ?","code":""},{"path":"https://acanthiza.github.io/envSDM/reference/make_predict_boundary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge polygons (or polygon files) to form a single minimum convex polygon\r\n(mcp) — make_predict_boundary","text":"(return_poly) sf else invisible(NULL). .parquet mcp written out_file","code":""},{"path":"https://acanthiza.github.io/envSDM/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://acanthiza.github.io/envSDM/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://acanthiza.github.io/envSDM/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://acanthiza.github.io/envSDM/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://acanthiza.github.io/envSDM/reference/png_from_preds.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate .png (map) files for each prediction — png_from_preds","title":"Generate .png (map) files for each prediction — png_from_preds","text":"Finds .tif files pred_dir writes .png files. Includes retrieval addition map : various SDM metrics; original presence points.","code":""},{"path":"https://acanthiza.github.io/envSDM/reference/png_from_preds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate .png (map) files for each prediction — png_from_preds","text":"","code":"png_from_preds(   pred_dir,   tune_dir = NULL,   trim = TRUE,   force_new = FALSE,   do_gc = TRUE,   ... )"},{"path":"https://acanthiza.github.io/envSDM/reference/png_from_preds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate .png (map) files for each prediction — png_from_preds","text":"pred_dir Character. Name directory containing predicted .tif(s) save .png tune_dir Character. Name directory containing tune results used make predictions pred_dir. trim Logical. Trim NA values outside (using terra::trim()) force_new Logical. .png file already exists, recreate ? do_gc Logical. Run base::rm(list = ls) base::gc() end function? Useful running SDMs many, many taxa, especially done parallel. ... Passed fs::dir_ls()","code":""},{"path":"https://acanthiza.github.io/envSDM/reference/png_from_preds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate .png (map) files for each prediction — png_from_preds","text":"invisible(NULL). Writes .png files file name .tif files","code":""},{"path":"https://acanthiza.github.io/envSDM/reference/png_from_preds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate .png (map) files for each prediction — png_from_preds","text":"","code":"# setup -------   in_dir <- file.path(system.file(package = \"envSDM\"), \"examples\")    env_dat <- system.file(\"ex/bio.tif\", package = \"predicts\")     # data ------   data <- file.path(system.file(package = \"predicts\"), \"ex\") |>     fs::dir_ls(regexp = \"\\\\.csv$\") |>     tibble::enframe(name = NULL, value = \"path\") |>     dplyr::mutate(taxa = gsub(\"\\\\.csv\", \"\", basename(path))                   , presence = purrr::map(path, rio::import, setclass = \"tibble\")                   , presence = purrr::map(presence                                           , \\(x) x |>                                             dplyr::filter(!is.na(lat)                                                           , !is.na(lon)                                                           )                                           )                   , out_dir = fs::path(in_dir, taxa)                   )    # Best combo--------   ## run full SDM --------   purrr::pwalk(list(data$out_dir)                  , \\(a) run_full_sdm(out_dir = a                                      , metrics_df = envSDM::sdm_metrics                                      )                  ) #> run full model for acaule #> run full model for bradypus     ## predict -------   purrr::pwalk(list(data$out_dir)                , \\(a) predict_sdm(prep_dir = a                                   , tune_dir = fs::path(a, \"combo\")                                   , predictors = env_dat                                   , is_env_pred = FALSE                                   , limit_to_mcp = TRUE                                   , check_tifs = TRUE                                   , force_new = TRUE                                   )                ) #> full predict for acaule from 'maxnet, lognet and glmnet' (maxnet) model #> mask for acaule #> apply threshold for acaule #> full predict for bradypus from 'randomForest' (rf) model #> mask for bradypus #> apply threshold for bradypus    ## .pngs -------   purrr::walk2(data$out_dir                , data$out_dir                , \\(x, y) png_from_preds(pred_dir = x                                         , tune_dir = y                                         , trim = FALSE                                         #, force_new = TRUE                                         , recurse = 1                                         )                )    ## visualise-------   ### mask -------   purrr::walk(data$out_dir               , \\(x) fs::path(x, \"combo\", \"mask.tif\") %>%                 terra::rast() %>%                 terra::trim() %>%                 terra::plot()               )      ### threshold ------   purrr::walk(data$out_dir               , \\(x) fs::path(x, \"combo\", \"thresh.tif\") %>%                 terra::rast() %>%                 terra::trim() %>%                 terra::plot()               )      # Best auc--------   ## run full SDM --------   purrr::pwalk(list(data$out_dir)                  , \\(a) run_full_sdm(out_dir = a                                      , metrics_df = envSDM::sdm_metrics                                      , metric = \"auc_po\"                                      , save_to = fs::path(a, \"auc_po\")                                      )                  ) #> run full model for acaule #> run full model for bradypus     ## predict -------   purrr::pwalk(list(data$out_dir)                , \\(a) predict_sdm(prep_dir = a                                   , tune_dir = fs::path(a, \"auc_po\")                                   , predictors = env_dat                                   , is_env_pred = FALSE                                   , limit_to_mcp = TRUE                                   , check_tifs = TRUE                                   )                )     ## visualise-------   ### mask -------   purrr::walk(data$out_dir               , \\(x) fs::path(x, \"auc_po\", \"mask.tif\") %>%                 terra::rast() %>%                 terra::trim() %>%                 terra::plot()               )      ### threshold ------   purrr::walk(data$out_dir               , \\(x) fs::path(x, \"auc_po\", \"thresh.tif\") %>%                 terra::rast() %>%                 terra::trim() %>%                 terra::plot()               )"},{"path":"https://acanthiza.github.io/envSDM/reference/png_from_tif.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a .png from a .tif — png_from_tif","title":"Create a .png from a .tif — png_from_tif","text":"Used within prep_sdm save png density raster presences","code":""},{"path":"https://acanthiza.github.io/envSDM/reference/png_from_tif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a .png from a .tif — png_from_tif","text":"","code":"png_from_tif(   x,   title = NULL,   dots = NULL,   trim = TRUE,   out_png = NULL,   do_gc = FALSE )"},{"path":"https://acanthiza.github.io/envSDM/reference/png_from_tif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a .png from a .tif — png_from_tif","text":"x spatRaster path .tif title Character. Title add .png dots sf. Usually presences. Added points. trim Logical. Run terra::trim() writing .png? out_png Character. Name .png file save. NULL file name terra::sources(x) file type .png do_gc Logical. Run base::rm(list = ls) base::gc() end function? Useful running SDMs many, many taxa, especially done parallel.","code":""},{"path":"https://acanthiza.github.io/envSDM/reference/png_from_tif.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a .png from a .tif — png_from_tif","text":"invisible(NULL). out_png written.","code":""},{"path":"https://acanthiza.github.io/envSDM/reference/predict_sdm.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict from SDM — predict_sdm","title":"Predict from SDM — predict_sdm","text":"running predict_sdm, first predict, saved 'full.tif' always full extent environmental variables even extend beyond predict boundary (ensures result can stacked). second predict, saved 'mask.tif' masked boundary provided: pred_limit argument prep_sdm; generated prep_sdm pred_limit, limit_buffer pred_clip arguments. threshold raster can also saved (saved 'thresh.tif') - see apply_thresh argument.","code":""},{"path":"https://acanthiza.github.io/envSDM/reference/predict_sdm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict from SDM — predict_sdm","text":"","code":"predict_sdm(   this_taxa = NULL,   prep_dir,   tune_dir = NULL,   out_dir = NULL,   predictors = NULL,   is_env_pred = TRUE,   terra_options = NULL,   doClamp = TRUE,   limit_to_mcp = TRUE,   apply_thresh = TRUE,   force_new = FALSE,   do_gc = FALSE,   check_tifs = TRUE,   ... )"},{"path":"https://acanthiza.github.io/envSDM/reference/predict_sdm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict from SDM — predict_sdm","text":"this_taxa Character. Name taxa. Used name outputs. NULL, basename(dirname(out_dir)). prep_dir Character. Name directory containing: prep.rds (created envSDM::prep_sdm()) tune_dir Character. Name directory containing tune.rds, created envSDM::tune_sdm(). Note tune.rds can used model first row used, thus usually tune.rds created directly envSDM::run_full_sdm() out_dir Character. Name directory .tifs saved. created exist. predictors Character. Vector paths predictor .tif files. is_env_pred Logical. naming directory files predictors follow pattern required envRaster::parse_env_tif()? terra_options Passed terra::terraOptions(). e.g. list(memfrac = 0.6) doClamp Passed terra::predict() (passes ... fun). Possibly orphaned older envSDM? limit_to_mcp Logical. predict_boundary exists within prep limit_to_mcp == TRUE, output raster (mask.tif) created within predict_boundary using terra::mask(). Irrespective limit_to_mcp, full.tif always created full extent predictors. Thus mask.tif files can 'stacked' extent. needed, limiting predictions taxa predict boundary can done via terra::trim(mask.tif). apply_thresh Logical. TRUE, output raster thresh.tif created using maximum specificity + sensitivity. threshold value can accessed within tune.rds , say, mod <- rio::import(\"tune.rds\") mod$e[[1]]@thresholds$max_spec_sens force_new Logical. output files already exist, remade? do_gc Logical. Run base::rm(list = ls) base::gc() end function? Useful keep RAM use running SDMs many, many taxa, especially done parallel. check_tifs Logical. Check output .tif files error terra::rast() delete . Useful crash predict. ... Passed terra::predict(). e.g. use wopt = list(). Also used masking full raster back mcp (e.g. also passed terra::mask())","code":""},{"path":"https://acanthiza.github.io/envSDM/reference/predict_sdm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict from SDM — predict_sdm","text":"invisible(NULL). Output .tif, .log, optional .png, written out_dir","code":""},{"path":"https://acanthiza.github.io/envSDM/reference/predict_sdm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict from SDM — predict_sdm","text":"","code":"# setup -------   in_dir <- file.path(system.file(package = \"envSDM\"), \"examples\")    env_dat <- system.file(\"ex/bio.tif\", package = \"predicts\")     # data ------   data <- file.path(system.file(package = \"predicts\"), \"ex\") |>     fs::dir_ls(regexp = \"\\\\.csv$\") |>     tibble::enframe(name = NULL, value = \"path\") |>     dplyr::mutate(taxa = gsub(\"\\\\.csv\", \"\", basename(path))                   , presence = purrr::map(path, rio::import, setclass = \"tibble\")                   , presence = purrr::map(presence                                           , \\(x) x |>                                             dplyr::filter(!is.na(lat)                                                           , !is.na(lon)                                                           )                                           )                   , out_dir = fs::path(in_dir, taxa)                   )    # Best combo--------   ## run full SDM --------   purrr::pwalk(list(data$out_dir)                  , \\(a) run_full_sdm(out_dir = a                                      , metrics_df = envSDM::sdm_metrics                                      )                  ) #> run full model for acaule #> run full model for bradypus     ## predict -------   purrr::pwalk(list(data$out_dir)                , \\(a) predict_sdm(prep_dir = a                                   , tune_dir = fs::path(a, \"combo\")                                   , predictors = env_dat                                   , is_env_pred = FALSE                                   , limit_to_mcp = TRUE                                   , check_tifs = TRUE                                   , force_new = TRUE                                   )                ) #> full predict for acaule from 'maxnet, lognet and glmnet' (maxnet) model #> mask for acaule #> apply threshold for acaule #> full predict for bradypus from 'randomForest' (rf) model #> mask for bradypus #> apply threshold for bradypus    ## .pngs -------   purrr::walk2(data$out_dir                , data$out_dir                , \\(x, y) png_from_preds(pred_dir = x                                         , tune_dir = y                                         , trim = FALSE                                         #, force_new = TRUE                                         , recurse = 1                                         )                )    ## visualise-------   ### mask -------   purrr::walk(data$out_dir               , \\(x) fs::path(x, \"combo\", \"mask.tif\") %>%                 terra::rast() %>%                 terra::trim() %>%                 terra::plot()               )      ### threshold ------   purrr::walk(data$out_dir               , \\(x) fs::path(x, \"combo\", \"thresh.tif\") %>%                 terra::rast() %>%                 terra::trim() %>%                 terra::plot()               )      # Best auc--------   ## run full SDM --------   purrr::pwalk(list(data$out_dir)                  , \\(a) run_full_sdm(out_dir = a                                      , metrics_df = envSDM::sdm_metrics                                      , metric = \"auc_po\"                                      , save_to = fs::path(a, \"auc_po\")                                      )                  ) #> run full model for acaule #> run full model for bradypus     ## predict -------   purrr::pwalk(list(data$out_dir)                , \\(a) predict_sdm(prep_dir = a                                   , tune_dir = fs::path(a, \"auc_po\")                                   , predictors = env_dat                                   , is_env_pred = FALSE                                   , limit_to_mcp = TRUE                                   , check_tifs = TRUE                                   )                )     ## visualise-------   ### mask -------   purrr::walk(data$out_dir               , \\(x) fs::path(x, \"auc_po\", \"mask.tif\") %>%                 terra::rast() %>%                 terra::trim() %>%                 terra::plot()               )      ### threshold ------   purrr::walk(data$out_dir               , \\(x) fs::path(x, \"auc_po\", \"thresh.tif\") %>%                 terra::rast() %>%                 terra::trim() %>%                 terra::plot()               )"},{"path":"https://acanthiza.github.io/envSDM/reference/prep_sdm.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare for running an SDM — prep_sdm","title":"Prepare for running an SDM — prep_sdm","text":"background sampling includes code based Geographic Information Systems stack exchange answer user Spacedman.","code":""},{"path":"https://acanthiza.github.io/envSDM/reference/prep_sdm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare for running an SDM — prep_sdm","text":"","code":"prep_sdm(   this_taxa = NULL,   out_dir,   presence,   pres_crs = 4326,   pres_x = \"long\",   pres_y = \"lat\",   pred_limit = TRUE,   limit_buffer = 0,   pred_clip = NULL,   predictors,   is_env_pred = TRUE,   cat_preds = NULL,   num_bg = 10000,   prop_abs = \"abs\",   many_p_prop = 2,   folds = 5,   spatial_folds = TRUE,   min_fold_n = 8,   stretch_value = 10,   dens_res = 1000,   save_pngs = TRUE,   remove_corr = TRUE,   corr_thresh = 0.9,   do_gc = FALSE,   force_new = FALSE )"},{"path":"https://acanthiza.github.io/envSDM/reference/prep_sdm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare for running an SDM — prep_sdm","text":"this_taxa Character. Name taxa. Used name outputs. NULL, basename(dirname(out_dir)). out_dir Character. Name directory results saved. presence Dataframe presences. Needs columns called lat (latitude) long (longitude) decimal degrees. pres_crs Anything return legitimate crs passed crs attribute st_transform st_as_sf pres_x, pres_y Character. Name columns presence x y coordinates pred_limit Limit background points predictions? Can TRUE (use points generate minimum convex polygon use limit), FALSE (limit) path existing sf use. limit_buffer Numeric. Apply buffer pred_limit. value passed dist argument sf::st_buffer(). pred_clip sf. Optional sf clip pred_limit back (e.g. prevent prediction ocean) predictors Character. Vector paths predictor .tif files. is_env_pred Logical. naming directory files predictors follow pattern required envRaster::parse_env_tif()? cat_preds Character. Vector predictor names character. num_bg Numeric. many background points? prop_abs Character. num_bg proportion (prop) number records presence absolute (abs) number? many_p_prop Numeric. Ensure number background points least many_p_prop * number presences. e.g. 5000 presences num_bg set 10000 many_p_prop 2, num_bg increased many_p_prop * nrow(presences) folds Numeric. many folds use cross validation? adjusted downwards number presences support folds * min_fold_n spatial_folds Logical. Use spatial folds? Even TRUE, can resort non-spatial cv presences per fold meet min_fold_n enough presences support one fold. min_fold_n Numeric. Sets minimum number presences, , default, minimum number presences required model. stretch_value Numeric. Stretch density raster value. dens_res NULL numeric. Resolution (metres) density raster. Set NULL use resolution predictors. save_pngs Logical. Save .png density raster spatial blocks remove_corr Logical. TRUE, predictors high correlation presences removed. corr_thresh Numeric. Definition 'high' correlation remove_corr do_gc Logical. Run base::rm(list = ls) base::gc() end function? Useful running SDMs many, many taxa, especially done parallel. force_new Logical. outputs already exist, remade?","code":""},{"path":"https://acanthiza.github.io/envSDM/reference/prep_sdm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare for running an SDM — prep_sdm","text":"invisible(NULL). prep.rds (list) log written out_dir","code":""},{"path":"https://acanthiza.github.io/envSDM/reference/prep_sdm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare for running an SDM — prep_sdm","text":"","code":"out_dir <- file.path(system.file(package = \"envSDM\"), \"examples\")    data <- file.path(system.file(package = \"predicts\"), \"ex\") |>     fs::dir_ls(regexp = \"\\\\.csv$\") |>     tibble::enframe(name = NULL, value = \"path\") |>     dplyr::mutate(taxa = gsub(\"\\\\.csv\", \"\", basename(path))                   , presence = purrr::map(path, rio::import, setclass = \"tibble\")                   , presence = purrr::map(presence                                           , \\(x) x |>                                             dplyr::filter(!is.na(lat)                                                           , !is.na(lon)                                                           )                                           )                   , out_dir = fs::path(out_dir, taxa)                   , out_mcp = fs::path(out_dir, \"mcp.parquet\")                   )    env_dat <- system.file(\"ex/bio.tif\", package = \"predicts\")     # mcps --------    purrr::pwalk(list(data$presence                    , data$out_mcp                    )               , \\(x, y) make_mcp(x, y, pres_x = \"lon\")               )     # prep -----------   # use the just created mcps (this allows using, say, a different spatial reliability threshold for the mcps)    purrr::pwalk(list(data$taxa                     , data$out_dir                     , data$presence                     , data$out_mcp                     )                , function(a, b, c, d) prep_sdm(this_taxa = a                                                , out_dir = b                                                , presence = c                                                , pres_x = \"lon\"                                                , pres_y = \"lat\"                                                , predictors = env_dat                                                , is_env_pred = FALSE                                                , pred_limit = d                                                , limit_buffer = 10000                                                , dens_res = 1000 # ignored as decimal degrees preds                                                , force_new = TRUE                                                )                ) #> prep for acaule #>    |                                                                               |                                                                      |   0%   |                                                                               |                                                                      |   1%   |                                                                               |=                                                                     |   1%   |                                                                               |=                                                                     |   2%   |                                                                               |==                                                                    |   2%   |                                                                               |==                                                                    |   3%   |                                                                               |==                                                                    |   4%   |                                                                               |===                                                                   |   4%   |                                                                               |===                                                                   |   5%   |                                                                               |====                                                                  |   5%   |                                                                               |====                                                                  |   6%   |                                                                               |=====                                                                 |   6%   |                                                                               |=====                                                                 |   7%   |                                                                               |=====                                                                 |   8%   |                                                                               |======                                                                |   8%   |                                                                               |======                                                                |   9%   |                                                                               |=======                                                               |   9%   |                                                                               |=======                                                               |  10%   |                                                                               |=======                                                               |  11%   |                                                                               |========                                                              |  11%   |                                                                               |========                                                              |  12%   |                                                                               |=========                                                             |  12%   |                                                                               |=========                                                             |  13%   |                                                                               |=========                                                             |  14%   |                                                                               |==========                                                            |  14%   |                                                                               |==========                                                            |  15%   |                                                                               |===========                                                           |  15%   |                                                                               |===========                                                           |  16%   |                                                                               |============                                                          |  16%   |                                                                               |============                                                          |  17%   |                                                                               |============                                                          |  18%   |                                                                               |=============                                                         |  18%   |                                                                               |=============                                                         |  19%   |                                                                               |==============                                                        |  19%   |                                                                               |==============                                                        |  20%   |                                                                               |==============                                                        |  21%   |                                                                               |===============                                                       |  21%   |                                                                               |===============                                                       |  22%   |                                                                               |================                                                      |  22%   |                                                                               |================                                                      |  23%   |                                                                               |================                                                      |  24%   |                                                                               |=================                                                     |  24%   |                                                                               |=================                                                     |  25%   |                                                                               |==================                                                    |  25%   |                                                                               |==================                                                    |  26%   |                                                                               |===================                                                   |  26%   |                                                                               |===================                                                   |  27%   |                                                                               |===================                                                   |  28%   |                                                                               |====================                                                  |  28%   |                                                                               |====================                                                  |  29%   |                                                                               |=====================                                                 |  29%   |                                                                               |=====================                                                 |  30%   |                                                                               |=====================                                                 |  31%   |                                                                               |======================                                                |  31%   |                                                                               |======================                                                |  32%   |                                                                               |=======================                                               |  32%   |                                                                               |=======================                                               |  33%   |                                                                               |=======================                                               |  34%   |                                                                               |========================                                              |  34%   |                                                                               |========================                                              |  35%   |                                                                               |=========================                                             |  35%   |                                                                               |=========================                                             |  36%   |                                                                               |==========================                                            |  36%   |                                                                               |==========================                                            |  37%   |                                                                               |==========================                                            |  38%   |                                                                               |===========================                                           |  38%   |                                                                               |===========================                                           |  39%   |                                                                               |============================                                          |  39%   |                                                                               |============================                                          |  40%   |                                                                               |============================                                          |  41%   |                                                                               |=============================                                         |  41%   |                                                                               |=============================                                         |  42%   |                                                                               |==============================                                        |  42%   |                                                                               |==============================                                        |  43%   |                                                                               |==============================                                        |  44%   |                                                                               |===============================                                       |  44%   |                                                                               |===============================                                       |  45%   |                                                                               |================================                                      |  45%   |                                                                               |================================                                      |  46%   |                                                                               |=================================                                     |  46%   |                                                                               |=================================                                     |  47%   |                                                                               |=================================                                     |  48%   |                                                                               |==================================                                    |  48%   |                                                                               |==================================                                    |  49%   |                                                                               |===================================                                   |  49%   |                                                                               |===================================                                   |  50%   |                                                                               |===================================                                   |  51%   |                                                                               |====================================                                  |  51%   |                                                                               |====================================                                  |  52%   |                                                                               |=====================================                                 |  52%   |                                                                               |=====================================                                 |  53%   |                                                                               |=====================================                                 |  54%   |                                                                               |======================================                                |  54%   |                                                                               |======================================                                |  55%   |                                                                               |=======================================                               |  55%   |                                                                               |=======================================                               |  56%   |                                                                               |========================================                              |  56%   |                                                                               |========================================                              |  57%   |                                                                               |========================================                              |  58%   |                                                                               |=========================================                             |  58%   |                                                                               |=========================================                             |  59%   |                                                                               |==========================================                            |  59%   |                                                                               |==========================================                            |  60%   |                                                                               |==========================================                            |  61%   |                                                                               |===========================================                           |  61%   |                                                                               |===========================================                           |  62%   |                                                                               |============================================                          |  62%   |                                                                               |============================================                          |  63%   |                                                                               |============================================                          |  64%   |                                                                               |=============================================                         |  64%   |                                                                               |=============================================                         |  65%   |                                                                               |==============================================                        |  65%   |                                                                               |==============================================                        |  66%   |                                                                               |===============================================                       |  66%   |                                                                               |===============================================                       |  67%   |                                                                               |===============================================                       |  68%   |                                                                               |================================================                      |  68%   |                                                                               |================================================                      |  69%   |                                                                               |=================================================                     |  69%   |                                                                               |=================================================                     |  70%   |                                                                               |=================================================                     |  71%   |                                                                               |==================================================                    |  71%   |                                                                               |==================================================                    |  72%   |                                                                               |===================================================                   |  72%   |                                                                               |===================================================                   |  73%   |                                                                               |===================================================                   |  74%   |                                                                               |====================================================                  |  74%   |                                                                               |====================================================                  |  75%   |                                                                               |=====================================================                 |  75%   |                                                                               |=====================================================                 |  76%   |                                                                               |======================================================                |  76%   |                                                                               |======================================================                |  77%   |                                                                               |======================================================                |  78%   |                                                                               |=======================================================               |  78%   |                                                                               |=======================================================               |  79%   |                                                                               |========================================================              |  79%   |                                                                               |========================================================              |  80%   |                                                                               |========================================================              |  81%   |                                                                               |=========================================================             |  81%   |                                                                               |=========================================================             |  82%   |                                                                               |==========================================================            |  82%   |                                                                               |==========================================================            |  83%   |                                                                               |==========================================================            |  84%   |                                                                               |===========================================================           |  84%   |                                                                               |===========================================================           |  85%   |                                                                               |============================================================          |  85%   |                                                                               |============================================================          |  86%   |                                                                               |=============================================================         |  86%   |                                                                               |=============================================================         |  87%   |                                                                               |=============================================================         |  88%   |                                                                               |==============================================================        |  88%   |                                                                               |==============================================================        |  89%   |                                                                               |===============================================================       |  89%   |                                                                               |===============================================================       |  90%   |                                                                               |===============================================================       |  91%   |                                                                               |================================================================      |  91%   |                                                                               |================================================================      |  92%   |                                                                               |=================================================================     |  92%   |                                                                               |=================================================================     |  93%   |                                                                               |=================================================================     |  94%   |                                                                               |==================================================================    |  94%   |                                                                               |==================================================================    |  95%   |                                                                               |===================================================================   |  95%   |                                                                               |===================================================================   |  96%   |                                                                               |====================================================================  |  96%   |                                                                               |====================================================================  |  97%   |                                                                               |====================================================================  |  98%   |                                                                               |===================================================================== |  98%   |                                                                               |===================================================================== |  99%   |                                                                               |======================================================================|  99%   |                                                                               |======================================================================| 100% #> Joining with `by = join_by(fold_ids)` #> Map saved to H:\\temp\\nige\\Rtmpq2YbeJ\\temp_libpath6084516a5772\\envSDM\\examples\\acaule\\blocks.png #> Resolution: 1644.584 by 2681.529 pixels #> Size: 5.481948 by 8.938429 inches (300 dpi) #> prep for bradypus #>    |                                                                               |                                                                      |   0%   |                                                                               |                                                                      |   1%   |                                                                               |=                                                                     |   1%   |                                                                               |=                                                                     |   2%   |                                                                               |==                                                                    |   2%   |                                                                               |==                                                                    |   3%   |                                                                               |==                                                                    |   4%   |                                                                               |===                                                                   |   4%   |                                                                               |===                                                                   |   5%   |                                                                               |====                                                                  |   5%   |                                                                               |====                                                                  |   6%   |                                                                               |=====                                                                 |   6%   |                                                                               |=====                                                                 |   7%   |                                                                               |=====                                                                 |   8%   |                                                                               |======                                                                |   8%   |                                                                               |======                                                                |   9%   |                                                                               |=======                                                               |   9%   |                                                                               |=======                                                               |  10%   |                                                                               |=======                                                               |  11%   |                                                                               |========                                                              |  11%   |                                                                               |========                                                              |  12%   |                                                                               |=========                                                             |  12%   |                                                                               |=========                                                             |  13%   |                                                                               |=========                                                             |  14%   |                                                                               |==========                                                            |  14%   |                                                                               |==========                                                            |  15%   |                                                                               |===========                                                           |  15%   |                                                                               |===========                                                           |  16%   |                                                                               |============                                                          |  16%   |                                                                               |============                                                          |  17%   |                                                                               |============                                                          |  18%   |                                                                               |=============                                                         |  18%   |                                                                               |=============                                                         |  19%   |                                                                               |==============                                                        |  19%   |                                                                               |==============                                                        |  20%   |                                                                               |==============                                                        |  21%   |                                                                               |===============                                                       |  21%   |                                                                               |===============                                                       |  22%   |                                                                               |================                                                      |  22%   |                                                                               |================                                                      |  23%   |                                                                               |================                                                      |  24%   |                                                                               |=================                                                     |  24%   |                                                                               |=================                                                     |  25%   |                                                                               |==================                                                    |  25%   |                                                                               |==================                                                    |  26%   |                                                                               |===================                                                   |  26%   |                                                                               |===================                                                   |  27%   |                                                                               |===================                                                   |  28%   |                                                                               |====================                                                  |  28%   |                                                                               |====================                                                  |  29%   |                                                                               |=====================                                                 |  29%   |                                                                               |=====================                                                 |  30%   |                                                                               |=====================                                                 |  31%   |                                                                               |======================                                                |  31%   |                                                                               |======================                                                |  32%   |                                                                               |=======================                                               |  32%   |                                                                               |=======================                                               |  33%   |                                                                               |=======================                                               |  34%   |                                                                               |========================                                              |  34%   |                                                                               |========================                                              |  35%   |                                                                               |=========================                                             |  35%   |                                                                               |=========================                                             |  36%   |                                                                               |==========================                                            |  36%   |                                                                               |==========================                                            |  37%   |                                                                               |==========================                                            |  38%   |                                                                               |===========================                                           |  38%   |                                                                               |===========================                                           |  39%   |                                                                               |============================                                          |  39%   |                                                                               |============================                                          |  40%   |                                                                               |============================                                          |  41%   |                                                                               |=============================                                         |  41%   |                                                                               |=============================                                         |  42%   |                                                                               |==============================                                        |  42%   |                                                                               |==============================                                        |  43%   |                                                                               |==============================                                        |  44%   |                                                                               |===============================                                       |  44%   |                                                                               |===============================                                       |  45%   |                                                                               |================================                                      |  45%   |                                                                               |================================                                      |  46%   |                                                                               |=================================                                     |  46%   |                                                                               |=================================                                     |  47%   |                                                                               |=================================                                     |  48%   |                                                                               |==================================                                    |  48%   |                                                                               |==================================                                    |  49%   |                                                                               |===================================                                   |  49%   |                                                                               |===================================                                   |  50%   |                                                                               |===================================                                   |  51%   |                                                                               |====================================                                  |  51%   |                                                                               |====================================                                  |  52%   |                                                                               |=====================================                                 |  52%   |                                                                               |=====================================                                 |  53%   |                                                                               |=====================================                                 |  54%   |                                                                               |======================================                                |  54%   |                                                                               |======================================                                |  55%   |                                                                               |=======================================                               |  55%   |                                                                               |=======================================                               |  56%   |                                                                               |========================================                              |  56%   |                                                                               |========================================                              |  57%   |                                                                               |========================================                              |  58%   |                                                                               |=========================================                             |  58%   |                                                                               |=========================================                             |  59%   |                                                                               |==========================================                            |  59%   |                                                                               |==========================================                            |  60%   |                                                                               |==========================================                            |  61%   |                                                                               |===========================================                           |  61%   |                                                                               |===========================================                           |  62%   |                                                                               |============================================                          |  62%   |                                                                               |============================================                          |  63%   |                                                                               |============================================                          |  64%   |                                                                               |=============================================                         |  64%   |                                                                               |=============================================                         |  65%   |                                                                               |==============================================                        |  65%   |                                                                               |==============================================                        |  66%   |                                                                               |===============================================                       |  66%   |                                                                               |===============================================                       |  67%   |                                                                               |===============================================                       |  68%   |                                                                               |================================================                      |  68%   |                                                                               |================================================                      |  69%   |                                                                               |=================================================                     |  69%   |                                                                               |=================================================                     |  70%   |                                                                               |=================================================                     |  71%   |                                                                               |==================================================                    |  71%   |                                                                               |==================================================                    |  72%   |                                                                               |===================================================                   |  72%   |                                                                               |===================================================                   |  73%   |                                                                               |===================================================                   |  74%   |                                                                               |====================================================                  |  74%   |                                                                               |====================================================                  |  75%   |                                                                               |=====================================================                 |  75%   |                                                                               |=====================================================                 |  76%   |                                                                               |======================================================                |  76%   |                                                                               |======================================================                |  77%   |                                                                               |======================================================                |  78%   |                                                                               |=======================================================               |  78%   |                                                                               |=======================================================               |  79%   |                                                                               |========================================================              |  79%   |                                                                               |========================================================              |  80%   |                                                                               |========================================================              |  81%   |                                                                               |=========================================================             |  81%   |                                                                               |=========================================================             |  82%   |                                                                               |==========================================================            |  82%   |                                                                               |==========================================================            |  83%   |                                                                               |==========================================================            |  84%   |                                                                               |===========================================================           |  84%   |                                                                               |===========================================================           |  85%   |                                                                               |============================================================          |  85%   |                                                                               |============================================================          |  86%   |                                                                               |=============================================================         |  86%   |                                                                               |=============================================================         |  87%   |                                                                               |=============================================================         |  88%   |                                                                               |==============================================================        |  88%   |                                                                               |==============================================================        |  89%   |                                                                               |===============================================================       |  89%   |                                                                               |===============================================================       |  90%   |                                                                               |===============================================================       |  91%   |                                                                               |================================================================      |  91%   |                                                                               |================================================================      |  92%   |                                                                               |=================================================================     |  92%   |                                                                               |=================================================================     |  93%   |                                                                               |=================================================================     |  94%   |                                                                               |==================================================================    |  94%   |                                                                               |==================================================================    |  95%   |                                                                               |===================================================================   |  95%   |                                                                               |===================================================================   |  96%   |                                                                               |====================================================================  |  96%   |                                                                               |====================================================================  |  97%   |                                                                               |====================================================================  |  98%   |                                                                               |===================================================================== |  98%   |                                                                               |===================================================================== |  99%   |                                                                               |======================================================================|  99%   |                                                                               |======================================================================| 100% #> Map saved to H:\\temp\\nige\\Rtmpq2YbeJ\\temp_libpath6084516a5772\\envSDM\\examples\\bradypus\\blocks.png #> Resolution: 2304.332 by 1913.787 pixels #> Size: 7.681105 by 6.37929 inches (300 dpi)    prep_ex <- rio::import(fs::path(data$out_dir[[2]], \"prep.rds\"))    names(prep_ex) #>  [1] \"inputs\"             \"original\"           \"timer\"              #>  [4] \"presence\"           \"predict_boundary\"   \"bg_points\"          #>  [7] \"spp_pa_env\"         \"blocks\"             \"spatial_folds_used\" #> [10] \"correlated\"            # Density raster   land <- terra::as.polygons(terra::rast(env_dat)[[1]] > -Inf) %>%     sf::st_as_sf()    dens_ras <- terra::rast(fs::path(data$out_dir[[2]], \"density.tif\")) %>%     terra::mask(land) %>%     terra::classify(matrix(c(0, NA), ncol = 2))    if(require(\"tmap\")) {      m <-       tm_shape(land) +       tm_borders() +       tm_shape(dens_ras) +       tm_raster(title = \"Background point density\"                 , breaks = c(0, 2, 4, 6, 8, 10)                 , drop.levels = TRUE                 , colorNA = NULL                 ) +       tm_legend(outside = TRUE) +       tm_compass() +       tm_scale_bar() +       tm_layout(main.title = paste0(\"Background point density for \",  prep_ex$inputs$this_taxa))      m      presences <- blocks %>%       dplyr::filter(pa == 1)      m +       tm_shape(presences) +         tm_dots(col = \"blue\")    } #> Loading required package: tmap #> Warning: package 'tmap' was built under R version 4.3.3 #> Breaking News: tmap 3.x is retiring. Please test v4, e.g. with #> remotes::install_github('r-tmap/tmap') #> Error in eval(expr, envir, enclos): object 'blocks' not found    # Background points   if(require(\"tmap\")) {      blocks <- prep_ex$blocks %>%       dplyr::mutate(blocks = factor(block)) %>% # for map       sf::st_as_sf(coords = c(\"x\", \"y\")                    , crs = sf::st_crs(terra::rast(env_dat[[1]]))                    )       tm_shape(land) +       tm_borders() +       tm_shape(blocks) +       tm_dots(title = \"Background points, coloured by block\"               , col = \"block\"               ) +       tm_legend(outside = TRUE) +       tm_compass() +       tm_scale_bar() +       tm_layout(main.title = paste0(\"Background points for \",  prep_ex$inputs$this_taxa))     } #> Scale bar set for latitude km and will be different at the top and bottom of the map."},{"path":"https://acanthiza.github.io/envSDM/reference/run_full_sdm.html","id":null,"dir":"Reference","previous_headings":"","what":"Run an SDM using no cross validation and previously established tune arguments — run_full_sdm","title":"Run an SDM using no cross validation and previously established tune arguments — run_full_sdm","text":"Run SDM using cross validation previously established tune arguments","code":""},{"path":"https://acanthiza.github.io/envSDM/reference/run_full_sdm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run an SDM using no cross validation and previously established tune arguments — run_full_sdm","text":"","code":"run_full_sdm(   this_taxa = NULL,   out_dir,   use_metric = \"combo\",   force_new = FALSE,   save_to = fs::path(out_dir, use_metric),   do_gc = FALSE,   ... )"},{"path":"https://acanthiza.github.io/envSDM/reference/run_full_sdm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run an SDM using no cross validation and previously established tune arguments — run_full_sdm","text":"this_taxa Character. Name taxa. Used name outputs. NULL, basename(dirname(out_dir)). out_dir Character. Name directory containing previous tunes results saved. use_metric Character. metric use find 'best' tune arguments previous tuning results? Default combo, product auc_po, CBI_rescale IMAE. use_metric must combo used use_metrics argument tune_sdm(). force_new Logical. outputs already exist, remade? save_to Character. Name path save results. Defaults fs::path(out_dir, use_metric) do_gc Logical. Run base::rm(list = ls) base::gc() end function? Useful running SDMs many, many taxa, especially done parallel. ... Passed tune_sdm()","code":""},{"path":"https://acanthiza.github.io/envSDM/reference/run_full_sdm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run an SDM using no cross validation and previously established tune arguments — run_full_sdm","text":"invisible(NULL). tune.rds saved save_to directory. log written. tune.rds data frame performs poorly, due list columns , imported tibble (e.g. via rio::import(tune.rds, setclass = \"tibble\")))","code":""},{"path":"https://acanthiza.github.io/envSDM/reference/run_full_sdm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run an SDM using no cross validation and previously established tune arguments — run_full_sdm","text":"","code":"inst/examples/predict_sdm_ex.R #> Error in eval(expr, envir, enclos): object 'inst' not found"},{"path":"https://acanthiza.github.io/envSDM/reference/sdm_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Lookup for metrics relevant to evaluating SDMs — sdm_metrics","title":"Lookup for metrics relevant to evaluating SDMs — sdm_metrics","text":"Lookup metrics relevant evaluating SDMs","code":""},{"path":"https://acanthiza.github.io/envSDM/reference/sdm_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lookup for metrics relevant to evaluating SDMs — sdm_metrics","text":"","code":"sdm_metrics"},{"path":"https://acanthiza.github.io/envSDM/reference/sdm_metrics.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Lookup for metrics relevant to evaluating SDMs — sdm_metrics","text":"data frame 14 rows 6 variables: metric Character. Short name metric used outputs high_good Logical. high values metric correlate good model? is_thresh Logical. metric dependent setting threshold? summary_mets Logical. metrics use summarising? within_mets Logical. Included compatibility envFunc::make_metric_df() across_mets Logical. Included compatibility envFunc::make_metric_df()","code":""},{"path":"https://acanthiza.github.io/envSDM/reference/tune_sdm.html","id":null,"dir":"Reference","previous_headings":"","what":"Tune, and evaluate, species distribution models — tune_sdm","title":"Tune, and evaluate, species distribution models — tune_sdm","text":"Tune, evaluate, species distribution models","code":""},{"path":"https://acanthiza.github.io/envSDM/reference/tune_sdm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tune, and evaluate, species distribution models — tune_sdm","text":"","code":"tune_sdm(   this_taxa = NULL,   out_dir,   algo = c(\"all\", \"maxnet\", \"bioclim\", \"envelope\", \"rf\"),   fc = \"auto_feature\",   limit_p = FALSE,   rm = seq(1, 6, 0.5),   trees = c(500, 1000, 2000),   mtry = TRUE,   nodesize = c(1, 2),   keep_model = FALSE,   best_run = FALSE,   metrics_df = envSDM::sdm_metrics,   use_metrics = c(\"auc_po\", \"CBI_rescale\", \"IMAE\"),   do_gc = TRUE,   force_new = FALSE,   save_to = out_dir,   ... )"},{"path":"https://acanthiza.github.io/envSDM/reference/tune_sdm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tune, and evaluate, species distribution models — tune_sdm","text":"this_taxa Character. Name taxa. Used name outputs. NULL, basename(dirname(out_dir)). out_dir Character. Name directory results saved. algo Character. Name algorithm use. fc Character. Used generate levels classes argument maxnet::maxnet() tuned. limit_p TRUE, FALSE number predictor variables limit use p classes argument used maxnet::maxnet(). Useful many predictor variables becomes unwieldy generate interactions predictors. rm Numeric. Used generate levels regmult argument maxnet::maxnet() tuned. trees Used generate levels ntree argument randomForest::randomForest() tuned. TRUE (tune default trees), FALSE (tune trees) numeric (trees values tune ). mtry Used generate levels mtry argument randomForest::randomForest() tuned. TRUE (tune sensible guesses mtry), FALSE (use default randomForest::randomForest() mtry) numeric (mtry values tune ). nodesize Used generate levels nodesize argument randomForest::randomForest() tuned. TRUE (tune default nodesize), FALSE (use default randomForest::randomForest() nodesize) numeric (nodesize values tune ). keep_model Logical. TRUE model results appended list column returned tibble (column m) best_run Logical. TRUE alters behaviour tune_sdm() , well, tuning. :). Sets blocks value cross-validation. metrics_df Dataframe. Defines metrics use deciding 'good' SDMs. use_metrics Character. Vector values metrics_df$metric use finding 'best' model. do_gc Logical. Run base::rm(list = ls) base::gc() end function? Useful running SDMs many, many taxa, especially done parallel. force_new Logical. outputs already exist, remade? save_to Character. Name path save results. Defaults out_dir works best_run. best run run_full_sdm(), default fs::path(out_dir, \"best\"). Otherwise set anything. ... Passed evaluate_sdm(). e.g. thresholds use predicts::pa_evaluate() (tr argument, although used, values thresholds element pa_ModelEvaluation object returned predicts::pa_evaluate() limited values tr).","code":""},{"path":"https://acanthiza.github.io/envSDM/reference/tune_sdm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tune, and evaluate, species distribution models — tune_sdm","text":"invisible(NULL). tune.rds log written save_to","code":""},{"path":"https://acanthiza.github.io/envSDM/reference/tune_sdm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tune, and evaluate, species distribution models — tune_sdm","text":"","code":"out_dir <- file.path(system.file(package = \"envSDM\"), \"examples\")    data <- file.path(system.file(package = \"predicts\"), \"ex\") |>     fs::dir_ls(regexp = \"\\\\.csv$\") |>     tibble::enframe(name = NULL, value = \"path\") |>     dplyr::mutate(taxa = gsub(\"\\\\.csv\", \"\", basename(path))                   , presence = purrr::map(path, rio::import, setclass = \"tibble\")                   , presence = purrr::map(presence                                           , \\(x) x |>                                             dplyr::filter(!is.na(lat)                                                           , !is.na(lon)                                                           )                                           )                   , out_dir = fs::path(out_dir, taxa)                   )    purrr::walk(data$out_dir               , \\(x) tune_sdm(out_dir = x)               ) #> tuning acaule #> tuning bradypus    # which tune args were best for each taxa using 'combo'?   data %>%     dplyr::mutate(eval_file = fs::path(out_dir, \"evaluation.csv\")                   , eval = purrr::map(eval_file, rio::import, setclass = \"tibble\")                   ) %>%     tidyr::unnest(cols = c(eval)) %>%     dplyr::filter(best) %>%     dplyr::select(taxa, algo, tune_args, combo, auc_po, IMAE, CBI, max_spec_sens) #> # A tibble: 2 × 8 #>   taxa     algo   tune_args             combo auc_po  IMAE   CBI max_spec_sens #>   <chr>    <chr>  <chr>                 <dbl>  <dbl> <dbl> <dbl>         <dbl> #> 1 acaule   maxnet fc: lqhp. rm: 1       0.702  0.884 0.842 0.885         0.304 #> 2 bradypus rf     tr: 500. mt: 2. ns: 1 0.468  0.729 0.678 0.896         0.310    # or best tune args choosing on just auc_po?   data %>%     dplyr::mutate(eval_file = fs::path(out_dir, \"evaluation.csv\")                   , eval = purrr::map(eval_file, rio::import, setclass = \"tibble\")                   ) %>%     tidyr::unnest(cols = c(eval)) %>%     dplyr::group_by(taxa) %>%     dplyr::filter(auc_po == max(auc_po)) %>%     dplyr::ungroup() %>%     dplyr::select(taxa, algo, tune_args, combo, auc_po, IMAE, CBI, max_spec_sens) #> # A tibble: 2 × 8 #>   taxa     algo   tune_args      combo auc_po  IMAE   CBI max_spec_sens #>   <chr>    <chr>  <chr>          <dbl>  <dbl> <dbl> <dbl>         <dbl> #> 1 acaule   maxnet fc: lqp. rm: 1 0.682  0.902 0.840 0.802         0.211 #> 2 bradypus maxnet fc: h. rm: 4.5 0.329  0.732 0.499 0.803         0.569"}]
