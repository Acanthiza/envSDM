% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/evaluate_sdm.R
\name{evaluate_sdm}
\alias{evaluate_sdm}
\title{Evaluate an SDM}
\usage{
evaluate_sdm(m, p_test, b_test, do_gc = FALSE, ...)
}
\arguments{
\item{m}{SDM result within \code{tune_sdm()}}

\item{p_test}{Presence test data generated within \code{tune_sdm()}}

\item{b_test}{Background test data generated within \code{tune_sdm()}}

\item{do_gc}{Logical. Run \code{base::rm(list = ls)} and \code{base::gc()} at end of
function? Useful when running SDMs for many, many taxa, especially if done in
parallel. Note, actually usees \code{rm(list = ls(pattern = "^[^e$]"))}.}

\item{...}{Passed to both \code{terra::predict()} and \code{predicts::pa_evaluate()}}
}
\value{
paModelEvaluation (see \code{predicts::pa_evaluate()}) with extra metrics
from \code{flexsdm::sdm_eval()}: AUC as auc_po_flexsdm; BOYCE as CBI; CBI_rescale
(CBI is -1 to 1, CBI_rescale is 0 to 1); and IMAE.
}
\description{
Returns various evaluation metrics from \code{predicts::pa_evaluate()} and
\code{flexsdm::sdm_eval()}.
}
\examples{

  out_dir <- file.path(system.file(package = "envSDM"), "examples", "acaule")

  prep <- rio::import(fs::path(out_dir, "prep.rds"))

  presences <- prep$blocks[prep$blocks$pa == 1 & prep$blocks$block != 1, ]
  background <- prep$blocks[prep$blocks$pa == 0 & prep$blocks$block != 1, ]

  evaluate_ex_dir <- fs::path(out_dir, "evaluate_example")
  fs::dir_create(evaluate_ex_dir)

  tune_sdm(out_dir = out_dir
           , algo = "rf"
           , trees = 500
           , mtry = FALSE
           , nodesize = FALSE
           , keep_model = TRUE
           , save_to = evaluate_ex_dir
           )

  tune <- rio::import(fs::path(evaluate_ex_dir, "tune.rds")
                      , setclass = "tibble"
                      )

  evaluate_sdm(tune$m[[1]]
               , p_test = presences
               , b_test = background
               )
}
\keyword{internal}
